import { col2im, im2col } from './cnn';
import nj from 'numjs';

describe('utils/cnn test', () => {
  describe('im2col', () => {
    test('', () => {
      const inputData = nj.array([
        [
          [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9],
          ],
          [
            [10, 11, 12],
            [13, 14, 15],
            [16, 17, 18],
          ],
        ],
      ]);
      const col = im2col(inputData, 2, 2);
      expect(col.tolist()).toEqual([
        [1, 2, 4, 5, 10, 11, 13, 14],
        [2, 3, 5, 6, 11, 12, 14, 15],
        [4, 5, 7, 8, 13, 14, 16, 17],
        [5, 6, 8, 9, 14, 15, 17, 18],
      ]);
    });
    test('', () => {
      const inputData = nj.array([
        [
          [
            [1, 2, 3],
            [4, 5, 6],
            [7, 8, 9],
          ],
          [
            [10, 11, 12],
            [13, 14, 15],
            [16, 17, 18],
          ],
        ],
      ]);
      const col = im2col(inputData, 3, 3);
      expect(col.tolist()).toEqual([
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
      ]);
    });
  });
  describe('col2im', () => {
    test('base', () => {
      const inputData = nj.array([
        [1, 2, 4, 5],
        [2, 3, 5, 6],
        [4, 5, 7, 8],
        [5, 6, 8, 9],
      ]);
      const img = col2im(inputData, { n: 1, d: 1, h: 3, w: 3 }, 2, 2);
      expect(img.tolist()).toEqual([
        [
          [
            [1, 4, 3],
            [8, 20, 12],
            [7, 16, 9],
          ],
        ],
      ]);
    });
    test('d=2', () => {
      const inputData = nj.array([
        [1, 2, 4, 5, 10, 11, 13, 14],
        [2, 3, 5, 6, 11, 12, 14, 15],
        [4, 5, 7, 8, 13, 14, 16, 17],
        [5, 6, 8, 9, 14, 15, 17, 18],
      ]);
      const img = col2im(inputData, { n: 1, d: 2, h: 3, w: 3 }, 2, 2);
      expect(img.tolist()).toEqual([
        [
          [
            [1, 4, 3],
            [8, 20, 12],
            [7, 16, 9],
          ],
          [
            [10, 22, 12],
            [26, 56, 30],
            [16, 34, 18],
          ],
        ],
      ]);
    });
    test('', () => {
      const inputData = nj.array([
        [1, 2, 5, 6, 1, 2, 5, 6],
        [3, 4, 7, 8, 3, 4, 7, 8],
        [9, 10, 13, 14, 9, 10, 13, 14],
        [11, 12, 15, 16, 11, 12, 15, 16],
      ]);
      const img = col2im(inputData, { n: 1, d: 2, h: 4, w: 4 }, 2, 2, 2, 0);
      expect(img.tolist()).toEqual([
        [
          [
            [1, 2, 3, 4],
            [5, 6, 7, 8],
            [9, 10, 11, 12],
            [13, 14, 15, 16],
          ],
          [
            [1, 2, 3, 4],
            [5, 6, 7, 8],
            [9, 10, 11, 12],
            [13, 14, 15, 16],
          ],
        ],
      ]);
    });
    test('', () => {
      const inputData = nj.array([
        [1, 2, 5, 6, 1, 2, 5, 6],
        [3, 4, 7, 8, 3, 4, 7, 8],
        [9, 10, 13, 14, 9, 10, 13, 14],
        [11, 12, 15, 16, 11, 12, 15, 16],
        [1, 2, 5, 6, 1, 2, 5, 6],
        [3, 4, 7, 8, 3, 4, 7, 8],
        [9, 10, 13, 14, 9, 10, 13, 14],
        [11, 12, 15, 16, 11, 12, 15, 16],
      ]);
      const img = col2im(inputData, { n: 2, d: 2, h: 4, w: 4 }, 2, 2, 2, 0);
      expect(img.tolist()).toEqual([
        [
          [
            [1, 2, 3, 4],
            [5, 6, 7, 8],
            [9, 10, 11, 12],
            [13, 14, 15, 16],
          ],
          [
            [1, 2, 3, 4],
            [5, 6, 7, 8],
            [9, 10, 11, 12],
            [13, 14, 15, 16],
          ],
        ],
        [
          [
            [1, 2, 3, 4],
            [5, 6, 7, 8],
            [9, 10, 11, 12],
            [13, 14, 15, 16],
          ],
          [
            [1, 2, 3, 4],
            [5, 6, 7, 8],
            [9, 10, 11, 12],
            [13, 14, 15, 16],
          ],
        ],
      ]);
    });
  });
});
